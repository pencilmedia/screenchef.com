Wizard Dialog Behavior Notes
author: Joel Nave
updated: 11/08/2007 by Joel Nave


************************************************
OVERVIEW
************************************************
This document describes the design and behaviors of Wizard Dialogs.  Note that a separate set of requirements shall be defined for "Action Dialogs" and "Record by Record" dialogs.


************************************************
General Wizard Dialog Requirements
************************************************
- All Wizard Dialogs follow the W3C xHTML 1.0 transitional coding requirements and shall be semantically correct and hack free.  
- Every Wizard Dialog are made up of a Header, Message, Content Area and Action Bar
- Every Wizard Dialog shall be sized to reduce scrolling.  There shall be a standard size defined for all Wizard dialogs.
- The default size does not result in horizontal scrolling.  In cases where a wizard contains a table, the table may scroll horizontally. 
- All non-data text is localizable including titles, actions and labels.  


************************************************
Header
************************************************
- Every Wizard Dialog has a header. 
- Every Header contains a Title and an optional Subtitle.
- Every Header contains a Step Indicator bar.  

- The Title is the name of the action + "Wizard".  For example, "Create Item Wizard"
- The Title displays at the top left within the header area.
- Subtitles display below the Title 
- In most cases the sub-title will reference the object type (subclass) and unique identifier of the object being acted upon.  There are infrequent exceptions to this.  For example: Reports do not include an object type and the Export dialog does not include a subtitle at all.

- The Step Indicator bar indicates what step the user is on and provides the users a sense of the total number of wizard steps.
- On the left side of the Step Indicator bar the current step name shall display.  For example, "Add Attachments"
- On the right side of the Step Indicator bar the number of steps in the wizard flow are displayed. (need a name)
-- The current step is indicated within the number of total steps
-- Any step is clickable, unless the step is dependent on a proceeding step
-- If a step is not clickable, then it is visually identified as not clickable
-- If the user mouses over a step number, a tooltip shall display the step name
- As users move from step to step, the step indicator name and count identifies the newly viewed step  



************************************************
Message Area
************************************************
- Every Wizard Dialog has a message area that displays instructional text and errors that occur.  
- Instructional text must be kept to a minimum, however there is not maximum number of characters that can be displayed in this area.  A maximum of 300 characters is a good guideline
- Instructional text is specific to each wizard step
- If an error occurs a generic error statement shall display in the message area and details of that error will be displayed within the content area

- Create Wizards shall display the page DMS and is consistent with all DMS / page behaviors  


************************************************
Content Area
************************************************
- Every Wizard Dialog has a content area.  The content area displays the form or table that must be completed by the user for a given step

Forms
-Forms can include the following UI controls:
-- Text
-- Multi-Text
-- Select Controls (list, MSL, MSS, SSS, CL, MSCL, MUSL, SUSL  
-- List w/Search (flat list, cascade list, or table)
-- Shuttle control
-- Date / Date and Time
-- Auto-Number
-- Checkboxes
-- Radio Buttons
-- Money
-- Unit of Measure

- UI controls can be grouped in two ways; Field Sets or Invisible Field Sets.  Both will group related fields, but the Field Set will have a line surrounding the group of fields
- Note that an Invisible Field Set can be used within a Field Set.    

- Each field can be displayed as a short, medium or long width
- Multi-text controls can be displayed as as 4 rows or 7 rows
- Multi-select Lists (including search, filter, users, cascades) are displayed as 4 rows

- Required fields are displayed according to the current required field convention (red asterisks, bold label) 
- Action dialogs may also include tabular data displayed in tables.  Definition of table requirements and interactions shall be covered separately 

Tables 
- tables will be pinned as they are on object pages.  This means that the left, right edges of the table shall touch the window frame.  The bottom touches the action bar.  If a horizontal scrollbar exists for the table it will always display directly above the action bar irrespective of the number of rows in the table.   



************************************************
Action Bar
************************************************
- Every Wizard Dialog contains an action bar.  
* - The action bar will include "Back", "Next", "Finish" and "Cancel"
- Actions will display in the bottom right of the dialog in the action bar

- Some action bars will contain Action Options.  These options include things like "Process in Background", "Apply to Sub-levels", "Continue in Creation Wizard", "Options"...  
- Action Options display in the bottom left of the dialog in the action bar
- These options can display as a checkbox or button
- Option selections shall be persisted across sessions per dialog, per user


************************************************
Dialog Interactions
************************************************
- Ideally, a dialog will have defaulted values and the focus will be set to the "primary" dialog action (e.g. "Send", "OK"...).  This allows the user to hit their enter key to execute the action immediately.  When designing action dialogs this approach should be taken whenever possible.   
- There are many cases where defaults are not provided and users must complete required content to execute the action.  In this case, the focus shall be displayed in the first active / enabled UI control within the Content Area (not the header).

- Users can tab through the UI controls in order to support efficient entry (tabbing behaviors shall follow the guidelines in the Keyboarding Guidelines document).
-- If a control includes a button (e.g. Calendar button to select a date), then tab should move from the input field to the button, then from the button to the next control. 
-- Disabled controls shall be skipped when tabbing.
-- When the tab lands on a button, the user can use the Enter key to execute the button action.  In most cases this will launch a palette that users can search or select from.  The Escape key shall bring the cursor back to the button without entering data into the element.  Enter shall bring the cursor back to the button and will set data within the element based on selections in the dialog.  
-- Once the user reaches the end of the form, the tab shall navigate the user to the dialogs primary action.  Tab will then go to secondary actions from left to right, then to Action Options.
-- When the cursor is on a checkbox or radio button, the spacebar shall select the element.
-- Once the user has tabbed through all action bar controls, tab shall take the user back to the first editable control in the content area.   