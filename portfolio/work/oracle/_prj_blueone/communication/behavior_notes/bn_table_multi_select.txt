

MULTI-SELECT LIST FOR TABLE
updated by Uday Gajendar
on 09/06/2007


************************************************
>> OVERVIEW
************************************************

prototype available? Partial

mockup available? Y

mockup file/location: table_actions.psd




UI COMPONENT DEFINITION:
Multi-select lists are used to select values from data sets small enough to be loaded up front (< 500 values). Can be found in any table as needed. 

>> see multi-select_list_G_master.pdf 

Limits:
>> see multi-select_list_G_master.pdf 

Dependencies:
Within the table cell, amount of data shown increases/decreases as user resizes the column width.

Default width:




TERMINOLOGY:
>> see multi-select_list_G_master.pdf 

Read-only Div: the expanded read-only view of the table cell contents, extends beyond the table cell borders, with a vertical scroll as needed

Edit Div: the editable view of the MSL content, with full MSL controls

Type-In Area: the text field for typing in values

Auto-completion: the appearance of qualifying data values in a list menu just as user starts typing in the type-in area above

Launch Button: for launching the search palette for MSL

Pill Area: contains the pills

Pill: a confirmed/validated data value that can be selected as a single entity

Focus: The normal browser notion of focus. Will allow events to fire relative to the object that has the focus.

Selection: Add the element that received an event to a collection of objects for code to operate on.

Visual Selection: A visual cue to the user that demonstrates the selected state of an object.




UI LAYOUT:

In table cell:
- the text is justified left within table cell
- data values separated by semicolon
- text truncated per browser abilities
- text revealed/hidden per table column resizing (see table_behavior_notes.txt)


In read-only div:
- the text is justified left within read-only div
- data values separated by semicolon
- text wraps per browser abilities within div space
- vertical scrolling allowed
- no horizontal scrolling


In edit div:
- type-in area is above the pill area
- text in the area is justified left
- launch button is to the right of the type-in area
- auto-completion list appears below the type-in area, temporarily obscuring the pill area
- text is justified left in auto-completion list
- pills occupy the pill area accordingly

>> see multi-select_list_G_master.pdf 

Positioning:
If on the far Right column:
- UOM, datepicker, MSL, and multitext all move in leftward so nothing is jutting outside of the table frame

If on the bottom row:
- multitext read and edit div goes upward from the cell
- MSL read div goes upward from the cell
- datepicker calendar appears above the cell when the button is pressed
- MSL edit div and single-select search goes upward




VISUAL DISPLAY:
table_actions.psd




ICONOGRAPHY: 
- search palette icon for the button: 16 x 16 pixels
- pill close button: 10 x 10 pixels



************************************************
>> BEHAVIORS
************************************************
------------------------------
IN GENERAL...
------------------------------

MOUSE ACTIONS: 

- CLICK on a cell: cell is highlighted, read-only div visible after 2 second delay
- DOUBLE-CLICK on a cell: UI control appears in the edit div, full MSL with pills and pill area shown
- CLICK search button to launch the palette
- CLICK off the read-only div = ESC
- CLICK off the edit div = ESC


KEYBOARD COMMANDS:
(note: these are subject to change per prototype feedback)

- TAB: puts focus on cell, and shows the read-only div after 2 second delay (equal to CLICK above)
- ENTER: flips to edit div (equal to DOUBLE-CLICK above)
- ENTER: keeps changes made, and shows the cell with new data, focus on current cell
- ESC: discards changes, and shows the cell with prior data, focus on current cell
- ARROW UP/DOWN: puts focus on above/below cell, and shows the read-only div after 2 second delay (equal to CLICK above)


** keyboarding within MSL control **
>> see multi-select_list_G_master.pdf 



TAB INDEX ORDER:

- across cells: horizontally, left to right, then down to the next row
- within MSL control: >> see multi-select_list_G_master.pdf 



DEFAULT STATES:
- Upon entering edit state, focus is on the type-in area ready for user to enter some text

- Edit Div default size: TBD




SYSTEM BEHAVIORS: n/a

------------------------------
READ DIV
------------------------------
- ARROW UP/DOWN to scroll thru the text block
- ESC to dismiss the div and see just the table cell as usual
- ARROW UP/DOWN or TAB to move focus to a different table cell

------------------------------
EDIT DIV
------------------------------

- appears on DOUBLE-CLICK or ENTER
- default Div size: TBD

- initial focus on appearance of edit div is in type-in area; it has visual focus ring
- for auto-completion, pill area, search palette behaviors:

> For auto-completion: 
-- for single value fields: Type value in field, auto-completion list of values appears, user arrows down, press ENTER, field becomes read state, with data value kept, focus and visual cue on current table cell
-- for multiple value fields: Type value in field, auto-complete list of values appears, user arrows down, press ENTER, that value is added to the pillbox area, focus on current cell, edit controls still visible and in-focus for repeat use... user has to press ENTER again to flip to read state, preserving just-added values...press TAB to move to next table cell laterally


>> see multi-select_list_G_master.pdf 
- ESC: discards changes, and shows the cell with prior data
- CLICK off the edit div = ESC



************************************************
>> TBD's/Issues Outstanding
************************************************

- All keyboard commands above; Ben/centralized keyboard list
- Any system behaviors not foreseen yet?

- How to handle Search Palette: where does it appear in relation to the Edit Div/MSL controls


************************************************
>> RELATED COMMENTS/DISCUSSIONS:
************************************************
Email thread with Ben Listwon, 6/26/07, re: search palettes

- what happens to the search palette upon focus change to:
-- a totally different table cell data type
-- different table cell but same data type (eg, in the same column, arrowing up/down)

I say we kill it on switch, for reasons covered yesterday (too busy, reload time, etc etc)
[uday: agree]


- what if user tries to drag search results from the palette to the read state of the MSL cell? 
[uday: flip it to edit state]

This is another reason I think that thing should close when a field is switched,
or you go from edit back to view.


- can we have more than one search palette shown at once? (eg, from a different table cell with MSL or user search, etc.)
[uday: NO]

Same as above.
